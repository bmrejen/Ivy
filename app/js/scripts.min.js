/*!
 * ivy
 * 
 * 
 * @author Marco Dizo
 * @version 1.0.0
 * Copyright 2018. MIT licensed.
 */
!function(s,e,t,o){"use strict";s(function(){s('a[href*="#"]').on("click",function(e){e.preventDefault(),s("html, body").animate({scrollTop:s(s(this).attr("href")).offset().top},500,"linear")}),feather.replace(),e.sr=ScrollReveal({reset:!0}),sr.reveal(".phone",{viewFactor:.6}),sr.reveal(".team-member",{viewFactor:.3,duration:1e3},50),s("header").headroom({offset:205,tolerance:5,classes:{initial:"animated",pinned:"slideDown",unpinned:"slideUp"}}),s(".slider").on("init",function(e,t){t.$dots.find("li").addClass("step-item")}),s(".slider").slick({infinite:!0,speed:500,fade:!0,cssEase:"linear",dots:!0,prevArrow:s("button.prev"),nextArrow:s("button.next"),appendDots:s(".journey-steps"),dotsClass:"step",zIndex:3,autoplay:!0,customPaging:function(e,t){return'<a class="tooltip" data-tooltip="'+s(e.$slides[t]).data("step")+'">'+s(e.$slides[t]).find(".slide-title").text()+"</a>"}}),s(".school-row").slick({slidesToShow:4,slidesToScroll:1,autoplay:!0,autoplaySpeed:2e3,infinite:!0,arrows:!1})})}(jQuery,window,document);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNjcmlwdHMuanMiXSwibmFtZXMiOlsiJCIsIndpbmRvdyIsImRvY3VtZW50IiwidW5kZWZpbmVkIiwib24iLCJlIiwicHJldmVudERlZmF1bHQiLCJhbmltYXRlIiwic2Nyb2xsVG9wIiwidGhpcyIsImF0dHIiLCJvZmZzZXQiLCJ0b3AiLCJmZWF0aGVyIiwicmVwbGFjZSIsInNyIiwiU2Nyb2xsUmV2ZWFsIiwicmVzZXQiLCJyZXZlYWwiLCJ2aWV3RmFjdG9yIiwiZHVyYXRpb24iLCJoZWFkcm9vbSIsInRvbGVyYW5jZSIsImNsYXNzZXMiLCJpbml0aWFsIiwicGlubmVkIiwidW5waW5uZWQiLCJldmVudCIsInNsaWNrIiwiJGRvdHMiLCJmaW5kIiwiYWRkQ2xhc3MiLCJpbmZpbml0ZSIsInNwZWVkIiwiZmFkZSIsImNzc0Vhc2UiLCJkb3RzIiwicHJldkFycm93IiwibmV4dEFycm93IiwiYXBwZW5kRG90cyIsImRvdHNDbGFzcyIsInpJbmRleCIsImF1dG9wbGF5IiwiY3VzdG9tUGFnaW5nIiwic2xpZGVyIiwiaSIsIiRzbGlkZXMiLCJkYXRhIiwidGV4dCIsInNsaWRlc1RvU2hvdyIsInNsaWRlc1RvU2Nyb2xsIiwiYXV0b3BsYXlTcGVlZCIsImFycm93cyIsImpRdWVyeSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Q0FBQSxTQUFXQSxFQUFHQyxFQUFRQyxFQUFVQyxHQUM5QixhQUVBSCxFQUFFLFdBQ0FBLEVBQUUsZ0JBQWdCSSxHQUFHLFFBQVMsU0FBVUMsR0FDdENBLEVBQUVDLGlCQUVGTixFQUFFLGNBQWNPLFFBQVEsQ0FDdEJDLFVBQVdSLEVBQUVBLEVBQUVTLE1BQU1DLEtBQUssU0FBU0MsU0FBU0MsS0FDM0MsSUFBSyxZQUdWQyxRQUFRQyxVQUVSYixFQUFPYyxHQUFLQyxhQUFhLENBQ3ZCQyxPQUFPLElBRVRGLEdBQUdHLE9BQU8sU0FBVSxDQUNsQkMsV0FBWSxLQUVkSixHQUFHRyxPQUFPLGVBQWdCLENBQ3hCQyxXQUFZLEdBQ1pDLFNBQVUsS0FDVCxJQUVIcEIsRUFBRSxVQUFVcUIsU0FBUyxDQUNuQlYsT0FBUSxJQUNSVyxVQUFXLEVBQ1hDLFFBQVMsQ0FDUEMsUUFBUyxXQUNUQyxPQUFRLFlBQ1JDLFNBQVUsYUFHZDFCLEVBQUUsV0FBV0ksR0FBRyxPQUFRLFNBQVV1QixFQUFPQyxHQUMxQkEsRUFBTUMsTUFBTUMsS0FBSyxNQUN2QkMsU0FBUyxlQUdsQi9CLEVBQUUsV0FBVzRCLE1BQU0sQ0FDakJJLFVBQVUsRUFDVkMsTUFBTyxJQUNQQyxNQUFNLEVBQ05DLFFBQVMsU0FDVEMsTUFBTSxFQUNOQyxVQUFXckMsRUFBRSxlQUNic0MsVUFBV3RDLEVBQUUsZUFDYnVDLFdBQVl2QyxFQUFFLGtCQUNkd0MsVUFBVyxPQUNYQyxPQUFRLEVBQ1JDLFVBQVUsRUFDVkMsYUFBYyxTQUFVQyxFQUFRQyxHQUs5QixNQUFPLG9DQUpJN0MsRUFBRTRDLEVBQU9FLFFBQVFELElBQUlFLEtBQUssUUFJZSxLQUh4Qy9DLEVBQUU0QyxFQUFPRSxRQUFRRCxJQUMxQmYsS0FBSyxnQkFDTGtCLE9BQ2dFLFVBSXZFaEQsRUFBRSxlQUFlNEIsTUFBTSxDQUNyQnFCLGFBQWMsRUFDZEMsZUFBZ0IsRUFDaEJSLFVBQVUsRUFDVlMsY0FBZSxJQUNmbkIsVUFBVSxFQUNWb0IsUUFBUSxNQWxFZCxDQXFFR0MsT0FBUXBELE9BQVFDIiwiZmlsZSI6InNjcmlwdHMubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uICgkLCB3aW5kb3csIGRvY3VtZW50LCB1bmRlZmluZWQpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gICQoZnVuY3Rpb24gKCkge1xuICAgICQoJ2FbaHJlZio9XCIjXCJdJykub24oJ2NsaWNrJywgZnVuY3Rpb24gKGUpIHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcblxuICAgICAgJCgnaHRtbCwgYm9keScpLmFuaW1hdGUoe1xuICAgICAgICBzY3JvbGxUb3A6ICQoJCh0aGlzKS5hdHRyKCdocmVmJykpLm9mZnNldCgpLnRvcFxuICAgICAgfSwgNTAwLCAnbGluZWFyJyk7XG4gICAgfSk7XG5cbiAgICBmZWF0aGVyLnJlcGxhY2UoKTtcblxuICAgIHdpbmRvdy5zciA9IFNjcm9sbFJldmVhbCh7XG4gICAgICByZXNldDogdHJ1ZVxuICAgIH0pO1xuICAgIHNyLnJldmVhbCgnLnBob25lJywge1xuICAgICAgdmlld0ZhY3RvcjogMC42XG4gICAgfSk7XG4gICAgc3IucmV2ZWFsKCcudGVhbS1tZW1iZXInLCB7XG4gICAgICB2aWV3RmFjdG9yOiAwLjMsXG4gICAgICBkdXJhdGlvbjogMTAwMFxuICAgIH0sIDUwKTtcblxuICAgICQoJ2hlYWRlcicpLmhlYWRyb29tKHtcbiAgICAgIG9mZnNldDogMjA1LFxuICAgICAgdG9sZXJhbmNlOiA1LFxuICAgICAgY2xhc3Nlczoge1xuICAgICAgICBpbml0aWFsOiAnYW5pbWF0ZWQnLFxuICAgICAgICBwaW5uZWQ6ICdzbGlkZURvd24nLFxuICAgICAgICB1bnBpbm5lZDogJ3NsaWRlVXAnXG4gICAgICB9XG4gICAgfSk7XG4gICAgJCgnLnNsaWRlcicpLm9uKCdpbml0JywgZnVuY3Rpb24gKGV2ZW50LCBzbGljaykge1xuICAgICAgdmFyICRpdGVtcyA9IHNsaWNrLiRkb3RzLmZpbmQoJ2xpJyk7XG4gICAgICAkaXRlbXMuYWRkQ2xhc3MoJ3N0ZXAtaXRlbScpO1xuICAgIH0pO1xuXG4gICAgJCgnLnNsaWRlcicpLnNsaWNrKHtcbiAgICAgIGluZmluaXRlOiB0cnVlLFxuICAgICAgc3BlZWQ6IDUwMCxcbiAgICAgIGZhZGU6IHRydWUsXG4gICAgICBjc3NFYXNlOiAnbGluZWFyJyxcbiAgICAgIGRvdHM6IHRydWUsXG4gICAgICBwcmV2QXJyb3c6ICQoJ2J1dHRvbi5wcmV2JyksXG4gICAgICBuZXh0QXJyb3c6ICQoJ2J1dHRvbi5uZXh0JyksXG4gICAgICBhcHBlbmREb3RzOiAkKCcuam91cm5leS1zdGVwcycpLFxuICAgICAgZG90c0NsYXNzOiAnc3RlcCcsXG4gICAgICB6SW5kZXg6IDMsXG4gICAgICBhdXRvcGxheTogdHJ1ZSxcbiAgICAgIGN1c3RvbVBhZ2luZzogZnVuY3Rpb24gKHNsaWRlciwgaSkge1xuICAgICAgICB2YXIgc3RlcCA9ICQoc2xpZGVyLiRzbGlkZXNbaV0pLmRhdGEoJ3N0ZXAnKTtcbiAgICAgICAgdmFyIHRpdGxlID0gJChzbGlkZXIuJHNsaWRlc1tpXSlcbiAgICAgICAgICAuZmluZCgnLnNsaWRlLXRpdGxlJylcbiAgICAgICAgICAudGV4dCgpO1xuICAgICAgICByZXR1cm4gJzxhIGNsYXNzPVwidG9vbHRpcFwiIGRhdGEtdG9vbHRpcD1cIicgKyBzdGVwICsgJ1wiPicgKyB0aXRsZSArICc8L2E+JztcbiAgICAgIH1cbiAgICB9KTtcblxuICAgICQoJy5zY2hvb2wtcm93Jykuc2xpY2soe1xuICAgICAgc2xpZGVzVG9TaG93OiA0LFxuICAgICAgc2xpZGVzVG9TY3JvbGw6IDEsXG4gICAgICBhdXRvcGxheTogdHJ1ZSxcbiAgICAgIGF1dG9wbGF5U3BlZWQ6IDIwMDAsXG4gICAgICBpbmZpbml0ZTogdHJ1ZSxcbiAgICAgIGFycm93czogZmFsc2UsXG4gICAgfSk7XG4gIH0pO1xufSkoalF1ZXJ5LCB3aW5kb3csIGRvY3VtZW50KTtcbiJdfQ==
